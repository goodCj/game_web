{"ast":null,"code":"import { useMemo } from 'react';\nexport function useColumnsFn(options) {\n  var depth = useMemo(function () {\n    var depth = 0;\n    function traverse(options, currentDepth) {\n      if (currentDepth > depth) depth = currentDepth;\n      var nextDepth = currentDepth + 1;\n      options.forEach(function (option) {\n        if (option.children) {\n          traverse(option.children, nextDepth);\n        }\n      });\n    }\n    traverse(options, 1);\n    return depth;\n  }, [options]);\n  return function (selected) {\n    var columns = [];\n    var currentOptions = options;\n    var i = 0;\n    var _loop = function _loop() {\n      columns.push(currentOptions.map(function (option) {\n        return {\n          label: option.label,\n          value: option.value\n        };\n      }));\n      var x = selected[i];\n      var targetOptions = currentOptions.find(function (option) {\n        return option.value === x;\n      });\n      if (!targetOptions || !targetOptions.children) return \"break\";\n      currentOptions = targetOptions.children;\n      i++;\n    };\n    while (true) {\n      var _ret = _loop();\n      if (_ret === \"break\") break;\n    }\n    while (i < depth - 1) {\n      columns.push([]);\n      i++;\n    }\n    return columns;\n  };\n}","map":{"version":3,"names":["useMemo","useColumnsFn","options","depth","traverse","currentDepth","nextDepth","forEach","option","children","selected","columns","currentOptions","i","_loop","push","map","label","value","x","targetOptions","find","_ret"],"sources":["/Users/liusu/Desktop/h5_free/game/node_modules/antd-mobile/es/components/cascade-picker/cascade-picker-utils.js"],"sourcesContent":["import { useMemo } from 'react';\nexport function useColumnsFn(options) {\n  const depth = useMemo(() => {\n    let depth = 0;\n    function traverse(options, currentDepth) {\n      if (currentDepth > depth) depth = currentDepth;\n      const nextDepth = currentDepth + 1;\n      options.forEach(option => {\n        if (option.children) {\n          traverse(option.children, nextDepth);\n        }\n      });\n    }\n    traverse(options, 1);\n    return depth;\n  }, [options]);\n  return selected => {\n    const columns = [];\n    let currentOptions = options;\n    let i = 0;\n    while (true) {\n      columns.push(currentOptions.map(option => ({\n        label: option.label,\n        value: option.value\n      })));\n      const x = selected[i];\n      const targetOptions = currentOptions.find(option => option.value === x);\n      if (!targetOptions || !targetOptions.children) break;\n      currentOptions = targetOptions.children;\n      i++;\n    }\n    while (i < depth - 1) {\n      columns.push([]);\n      i++;\n    }\n    return columns;\n  };\n}"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,OAAO,SAASC,YAAYA,CAACC,OAAO,EAAE;EACpC,IAAMC,KAAK,GAAGH,OAAO,CAAC,YAAM;IAC1B,IAAIG,KAAK,GAAG,CAAC;IACb,SAASC,QAAQA,CAACF,OAAO,EAAEG,YAAY,EAAE;MACvC,IAAIA,YAAY,GAAGF,KAAK,EAAEA,KAAK,GAAGE,YAAY;MAC9C,IAAMC,SAAS,GAAGD,YAAY,GAAG,CAAC;MAClCH,OAAO,CAACK,OAAO,CAAC,UAAAC,MAAM,EAAI;QACxB,IAAIA,MAAM,CAACC,QAAQ,EAAE;UACnBL,QAAQ,CAACI,MAAM,CAACC,QAAQ,EAAEH,SAAS,CAAC;QACtC;MACF,CAAC,CAAC;IACJ;IACAF,QAAQ,CAACF,OAAO,EAAE,CAAC,CAAC;IACpB,OAAOC,KAAK;EACd,CAAC,EAAE,CAACD,OAAO,CAAC,CAAC;EACb,OAAO,UAAAQ,QAAQ,EAAI;IACjB,IAAMC,OAAO,GAAG,EAAE;IAClB,IAAIC,cAAc,GAAGV,OAAO;IAC5B,IAAIW,CAAC,GAAG,CAAC;IAAC,IAAAC,KAAA,YAAAA,MAAA,EACG;MACXH,OAAO,CAACI,IAAI,CAACH,cAAc,CAACI,GAAG,CAAC,UAAAR,MAAM;QAAA,OAAK;UACzCS,KAAK,EAAET,MAAM,CAACS,KAAK;UACnBC,KAAK,EAAEV,MAAM,CAACU;QAChB,CAAC;MAAA,CAAC,CAAC,CAAC;MACJ,IAAMC,CAAC,GAAGT,QAAQ,CAACG,CAAC,CAAC;MACrB,IAAMO,aAAa,GAAGR,cAAc,CAACS,IAAI,CAAC,UAAAb,MAAM;QAAA,OAAIA,MAAM,CAACU,KAAK,KAAKC,CAAC;MAAA,EAAC;MACvE,IAAI,CAACC,aAAa,IAAI,CAACA,aAAa,CAACX,QAAQ;MAC7CG,cAAc,GAAGQ,aAAa,CAACX,QAAQ;MACvCI,CAAC,EAAE;IACL,CAAC;IAVD,OAAO,IAAI;MAAA,IAAAS,IAAA,GAAAR,KAAA;MAAA,IAAAQ,IAAA,cAOsC;IAAM;IAIvD,OAAOT,CAAC,GAAGV,KAAK,GAAG,CAAC,EAAE;MACpBQ,OAAO,CAACI,IAAI,CAAC,EAAE,CAAC;MAChBF,CAAC,EAAE;IACL;IACA,OAAOF,OAAO;EAChB,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}