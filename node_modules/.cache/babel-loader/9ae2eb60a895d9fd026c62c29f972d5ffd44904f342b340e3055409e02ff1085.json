{"ast":null,"code":"import { useRef } from 'react';\nimport useUpdateEffect from '../../../useUpdateEffect';\nimport isDocumentVisible from '../utils/isDocumentVisible';\nimport subscribeReVisible from '../utils/subscribeReVisible';\nvar usePollingPlugin = function usePollingPlugin(fetchInstance, _ref) {\n  var pollingInterval = _ref.pollingInterval,\n    _ref$pollingWhenHidde = _ref.pollingWhenHidden,\n    pollingWhenHidden = _ref$pollingWhenHidde === void 0 ? true : _ref$pollingWhenHidde,\n    _ref$pollingErrorRetr = _ref.pollingErrorRetryCount,\n    pollingErrorRetryCount = _ref$pollingErrorRetr === void 0 ? -1 : _ref$pollingErrorRetr;\n  var timerRef = useRef();\n  var unsubscribeRef = useRef();\n  var countRef = useRef(0);\n  var stopPolling = function stopPolling() {\n    var _a;\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n    (_a = unsubscribeRef.current) === null || _a === void 0 ? void 0 : _a.call(unsubscribeRef);\n  };\n  useUpdateEffect(function () {\n    if (!pollingInterval) {\n      stopPolling();\n    }\n  }, [pollingInterval]);\n  if (!pollingInterval) {\n    return {};\n  }\n  return {\n    onBefore: function onBefore() {\n      stopPolling();\n    },\n    onError: function onError() {\n      countRef.current += 1;\n    },\n    onSuccess: function onSuccess() {\n      countRef.current = 0;\n    },\n    onFinally: function onFinally() {\n      if (pollingErrorRetryCount === -1 ||\n      // When an error occurs, the request is not repeated after pollingErrorRetryCount retries\n      pollingErrorRetryCount !== -1 && countRef.current <= pollingErrorRetryCount) {\n        timerRef.current = setTimeout(function () {\n          // if pollingWhenHidden = false && document is hidden, then stop polling and subscribe revisible\n          if (!pollingWhenHidden && !isDocumentVisible()) {\n            unsubscribeRef.current = subscribeReVisible(function () {\n              fetchInstance.refresh();\n            });\n          } else {\n            fetchInstance.refresh();\n          }\n        }, pollingInterval);\n      } else {\n        countRef.current = 0;\n      }\n    },\n    onCancel: function onCancel() {\n      stopPolling();\n    }\n  };\n};\nexport default usePollingPlugin;","map":{"version":3,"names":["useRef","useUpdateEffect","isDocumentVisible","subscribeReVisible","usePollingPlugin","fetchInstance","_ref","pollingInterval","_ref$pollingWhenHidde","pollingWhenHidden","_ref$pollingErrorRetr","pollingErrorRetryCount","timerRef","unsubscribeRef","countRef","stopPolling","_a","current","clearTimeout","call","onBefore","onError","onSuccess","onFinally","setTimeout","refresh","onCancel"],"sources":["/Users/liusu/Desktop/h5_free/game/node_modules/ahooks/es/useRequest/src/plugins/usePollingPlugin.js"],"sourcesContent":["import { useRef } from 'react';\nimport useUpdateEffect from '../../../useUpdateEffect';\nimport isDocumentVisible from '../utils/isDocumentVisible';\nimport subscribeReVisible from '../utils/subscribeReVisible';\nconst usePollingPlugin = (fetchInstance, {\n  pollingInterval,\n  pollingWhenHidden = true,\n  pollingErrorRetryCount = -1\n}) => {\n  const timerRef = useRef();\n  const unsubscribeRef = useRef();\n  const countRef = useRef(0);\n  const stopPolling = () => {\n    var _a;\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n    }\n    (_a = unsubscribeRef.current) === null || _a === void 0 ? void 0 : _a.call(unsubscribeRef);\n  };\n  useUpdateEffect(() => {\n    if (!pollingInterval) {\n      stopPolling();\n    }\n  }, [pollingInterval]);\n  if (!pollingInterval) {\n    return {};\n  }\n  return {\n    onBefore: () => {\n      stopPolling();\n    },\n    onError: () => {\n      countRef.current += 1;\n    },\n    onSuccess: () => {\n      countRef.current = 0;\n    },\n    onFinally: () => {\n      if (pollingErrorRetryCount === -1 ||\n      // When an error occurs, the request is not repeated after pollingErrorRetryCount retries\n      pollingErrorRetryCount !== -1 && countRef.current <= pollingErrorRetryCount) {\n        timerRef.current = setTimeout(() => {\n          // if pollingWhenHidden = false && document is hidden, then stop polling and subscribe revisible\n          if (!pollingWhenHidden && !isDocumentVisible()) {\n            unsubscribeRef.current = subscribeReVisible(() => {\n              fetchInstance.refresh();\n            });\n          } else {\n            fetchInstance.refresh();\n          }\n        }, pollingInterval);\n      } else {\n        countRef.current = 0;\n      }\n    },\n    onCancel: () => {\n      stopPolling();\n    }\n  };\n};\nexport default usePollingPlugin;"],"mappings":"AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,OAAOC,eAAe,MAAM,0BAA0B;AACtD,OAAOC,iBAAiB,MAAM,4BAA4B;AAC1D,OAAOC,kBAAkB,MAAM,6BAA6B;AAC5D,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,aAAa,EAAAC,IAAA,EAIjC;EAAA,IAHJC,eAAe,GAAAD,IAAA,CAAfC,eAAe;IAAAC,qBAAA,GAAAF,IAAA,CACfG,iBAAiB;IAAjBA,iBAAiB,GAAAD,qBAAA,cAAG,IAAI,GAAAA,qBAAA;IAAAE,qBAAA,GAAAJ,IAAA,CACxBK,sBAAsB;IAAtBA,sBAAsB,GAAAD,qBAAA,cAAG,CAAC,CAAC,GAAAA,qBAAA;EAE3B,IAAME,QAAQ,GAAGZ,MAAM,EAAE;EACzB,IAAMa,cAAc,GAAGb,MAAM,EAAE;EAC/B,IAAMc,QAAQ,GAAGd,MAAM,CAAC,CAAC,CAAC;EAC1B,IAAMe,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxB,IAAIC,EAAE;IACN,IAAIJ,QAAQ,CAACK,OAAO,EAAE;MACpBC,YAAY,CAACN,QAAQ,CAACK,OAAO,CAAC;IAChC;IACA,CAACD,EAAE,GAAGH,cAAc,CAACI,OAAO,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,IAAI,CAACN,cAAc,CAAC;EAC5F,CAAC;EACDZ,eAAe,CAAC,YAAM;IACpB,IAAI,CAACM,eAAe,EAAE;MACpBQ,WAAW,EAAE;IACf;EACF,CAAC,EAAE,CAACR,eAAe,CAAC,CAAC;EACrB,IAAI,CAACA,eAAe,EAAE;IACpB,OAAO,CAAC,CAAC;EACX;EACA,OAAO;IACLa,QAAQ,EAAE,SAAAA,SAAA,EAAM;MACdL,WAAW,EAAE;IACf,CAAC;IACDM,OAAO,EAAE,SAAAA,QAAA,EAAM;MACbP,QAAQ,CAACG,OAAO,IAAI,CAAC;IACvB,CAAC;IACDK,SAAS,EAAE,SAAAA,UAAA,EAAM;MACfR,QAAQ,CAACG,OAAO,GAAG,CAAC;IACtB,CAAC;IACDM,SAAS,EAAE,SAAAA,UAAA,EAAM;MACf,IAAIZ,sBAAsB,KAAK,CAAC,CAAC;MACjC;MACAA,sBAAsB,KAAK,CAAC,CAAC,IAAIG,QAAQ,CAACG,OAAO,IAAIN,sBAAsB,EAAE;QAC3EC,QAAQ,CAACK,OAAO,GAAGO,UAAU,CAAC,YAAM;UAClC;UACA,IAAI,CAACf,iBAAiB,IAAI,CAACP,iBAAiB,EAAE,EAAE;YAC9CW,cAAc,CAACI,OAAO,GAAGd,kBAAkB,CAAC,YAAM;cAChDE,aAAa,CAACoB,OAAO,EAAE;YACzB,CAAC,CAAC;UACJ,CAAC,MAAM;YACLpB,aAAa,CAACoB,OAAO,EAAE;UACzB;QACF,CAAC,EAAElB,eAAe,CAAC;MACrB,CAAC,MAAM;QACLO,QAAQ,CAACG,OAAO,GAAG,CAAC;MACtB;IACF,CAAC;IACDS,QAAQ,EAAE,SAAAA,SAAA,EAAM;MACdX,WAAW,EAAE;IACf;EACF,CAAC;AACH,CAAC;AACD,eAAeX,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}