{"ast":null,"code":"import _slicedToArray from \"/Users/liusu/Desktop/h5_free/game/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState } from 'react';\nimport useMemoizedFn from '../useMemoizedFn';\nimport { isNumber } from '../utils';\nfunction getTargetValue(val) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var min = options.min,\n    max = options.max;\n  var target = val;\n  if (isNumber(max)) {\n    target = Math.min(max, target);\n  }\n  if (isNumber(min)) {\n    target = Math.max(min, target);\n  }\n  return target;\n}\nfunction useCounter() {\n  var initialValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var min = options.min,\n    max = options.max;\n  var _useState = useState(function () {\n      return getTargetValue(initialValue, {\n        min: min,\n        max: max\n      });\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    current = _useState2[0],\n    setCurrent = _useState2[1];\n  var setValue = function setValue(value) {\n    setCurrent(function (c) {\n      var target = isNumber(value) ? value : value(c);\n      return getTargetValue(target, {\n        max: max,\n        min: min\n      });\n    });\n  };\n  var inc = function inc() {\n    var delta = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    setValue(function (c) {\n      return c + delta;\n    });\n  };\n  var dec = function dec() {\n    var delta = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    setValue(function (c) {\n      return c - delta;\n    });\n  };\n  var set = function set(value) {\n    setValue(value);\n  };\n  var reset = function reset() {\n    setValue(initialValue);\n  };\n  return [current, {\n    inc: useMemoizedFn(inc),\n    dec: useMemoizedFn(dec),\n    set: useMemoizedFn(set),\n    reset: useMemoizedFn(reset)\n  }];\n}\nexport default useCounter;","map":{"version":3,"names":["useState","useMemoizedFn","isNumber","getTargetValue","val","options","arguments","length","undefined","min","max","target","Math","useCounter","initialValue","_useState","_useState2","_slicedToArray","current","setCurrent","setValue","value","c","inc","delta","dec","set","reset"],"sources":["/Users/liusu/Desktop/h5_free/game/node_modules/ahooks/es/useCounter/index.js"],"sourcesContent":["import { useState } from 'react';\nimport useMemoizedFn from '../useMemoizedFn';\nimport { isNumber } from '../utils';\nfunction getTargetValue(val, options = {}) {\n  const {\n    min,\n    max\n  } = options;\n  let target = val;\n  if (isNumber(max)) {\n    target = Math.min(max, target);\n  }\n  if (isNumber(min)) {\n    target = Math.max(min, target);\n  }\n  return target;\n}\nfunction useCounter(initialValue = 0, options = {}) {\n  const {\n    min,\n    max\n  } = options;\n  const [current, setCurrent] = useState(() => {\n    return getTargetValue(initialValue, {\n      min,\n      max\n    });\n  });\n  const setValue = value => {\n    setCurrent(c => {\n      const target = isNumber(value) ? value : value(c);\n      return getTargetValue(target, {\n        max,\n        min\n      });\n    });\n  };\n  const inc = (delta = 1) => {\n    setValue(c => c + delta);\n  };\n  const dec = (delta = 1) => {\n    setValue(c => c - delta);\n  };\n  const set = value => {\n    setValue(value);\n  };\n  const reset = () => {\n    setValue(initialValue);\n  };\n  return [current, {\n    inc: useMemoizedFn(inc),\n    dec: useMemoizedFn(dec),\n    set: useMemoizedFn(set),\n    reset: useMemoizedFn(reset)\n  }];\n}\nexport default useCounter;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}