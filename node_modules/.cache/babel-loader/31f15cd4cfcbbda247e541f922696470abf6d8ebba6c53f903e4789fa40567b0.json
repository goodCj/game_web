{"ast":null,"code":"import _slicedToArray from \"/Users/liusu/Desktop/h5_free/game/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useEffect, useState } from 'react';\nimport { isObject } from '../utils';\nvar NetworkEventType;\n(function (NetworkEventType) {\n  NetworkEventType[\"ONLINE\"] = \"online\";\n  NetworkEventType[\"OFFLINE\"] = \"offline\";\n  NetworkEventType[\"CHANGE\"] = \"change\";\n})(NetworkEventType || (NetworkEventType = {}));\nfunction getConnection() {\n  var nav = navigator;\n  if (!isObject(nav)) return null;\n  return nav.connection || nav.mozConnection || nav.webkitConnection;\n}\nfunction getConnectionProperty() {\n  var c = getConnection();\n  if (!c) return {};\n  return {\n    rtt: c.rtt,\n    type: c.type,\n    saveData: c.saveData,\n    downlink: c.downlink,\n    downlinkMax: c.downlinkMax,\n    effectiveType: c.effectiveType\n  };\n}\nfunction useNetwork() {\n  var _useState = useState(function () {\n      return Object.assign({\n        since: undefined,\n        online: navigator === null || navigator === void 0 ? void 0 : navigator.onLine\n      }, getConnectionProperty());\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  useEffect(function () {\n    var onOnline = function onOnline() {\n      setState(function (prevState) {\n        return Object.assign(Object.assign({}, prevState), {\n          online: true,\n          since: new Date()\n        });\n      });\n    };\n    var onOffline = function onOffline() {\n      setState(function (prevState) {\n        return Object.assign(Object.assign({}, prevState), {\n          online: false,\n          since: new Date()\n        });\n      });\n    };\n    var onConnectionChange = function onConnectionChange() {\n      setState(function (prevState) {\n        return Object.assign(Object.assign({}, prevState), getConnectionProperty());\n      });\n    };\n    window.addEventListener(NetworkEventType.ONLINE, onOnline);\n    window.addEventListener(NetworkEventType.OFFLINE, onOffline);\n    var connection = getConnection();\n    connection === null || connection === void 0 ? void 0 : connection.addEventListener(NetworkEventType.CHANGE, onConnectionChange);\n    return function () {\n      window.removeEventListener(NetworkEventType.ONLINE, onOnline);\n      window.removeEventListener(NetworkEventType.OFFLINE, onOffline);\n      connection === null || connection === void 0 ? void 0 : connection.removeEventListener(NetworkEventType.CHANGE, onConnectionChange);\n    };\n  }, []);\n  return state;\n}\nexport default useNetwork;","map":{"version":3,"names":["useEffect","useState","isObject","NetworkEventType","getConnection","nav","navigator","connection","mozConnection","webkitConnection","getConnectionProperty","c","rtt","type","saveData","downlink","downlinkMax","effectiveType","useNetwork","_useState","Object","assign","since","undefined","online","onLine","_useState2","_slicedToArray","state","setState","onOnline","prevState","Date","onOffline","onConnectionChange","window","addEventListener","ONLINE","OFFLINE","CHANGE","removeEventListener"],"sources":["/Users/liusu/Desktop/h5_free/game/node_modules/ahooks/es/useNetwork/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { isObject } from '../utils';\nvar NetworkEventType;\n(function (NetworkEventType) {\n  NetworkEventType[\"ONLINE\"] = \"online\";\n  NetworkEventType[\"OFFLINE\"] = \"offline\";\n  NetworkEventType[\"CHANGE\"] = \"change\";\n})(NetworkEventType || (NetworkEventType = {}));\nfunction getConnection() {\n  const nav = navigator;\n  if (!isObject(nav)) return null;\n  return nav.connection || nav.mozConnection || nav.webkitConnection;\n}\nfunction getConnectionProperty() {\n  const c = getConnection();\n  if (!c) return {};\n  return {\n    rtt: c.rtt,\n    type: c.type,\n    saveData: c.saveData,\n    downlink: c.downlink,\n    downlinkMax: c.downlinkMax,\n    effectiveType: c.effectiveType\n  };\n}\nfunction useNetwork() {\n  const [state, setState] = useState(() => {\n    return Object.assign({\n      since: undefined,\n      online: navigator === null || navigator === void 0 ? void 0 : navigator.onLine\n    }, getConnectionProperty());\n  });\n  useEffect(() => {\n    const onOnline = () => {\n      setState(prevState => Object.assign(Object.assign({}, prevState), {\n        online: true,\n        since: new Date()\n      }));\n    };\n    const onOffline = () => {\n      setState(prevState => Object.assign(Object.assign({}, prevState), {\n        online: false,\n        since: new Date()\n      }));\n    };\n    const onConnectionChange = () => {\n      setState(prevState => Object.assign(Object.assign({}, prevState), getConnectionProperty()));\n    };\n    window.addEventListener(NetworkEventType.ONLINE, onOnline);\n    window.addEventListener(NetworkEventType.OFFLINE, onOffline);\n    const connection = getConnection();\n    connection === null || connection === void 0 ? void 0 : connection.addEventListener(NetworkEventType.CHANGE, onConnectionChange);\n    return () => {\n      window.removeEventListener(NetworkEventType.ONLINE, onOnline);\n      window.removeEventListener(NetworkEventType.OFFLINE, onOffline);\n      connection === null || connection === void 0 ? void 0 : connection.removeEventListener(NetworkEventType.CHANGE, onConnectionChange);\n    };\n  }, []);\n  return state;\n}\nexport default useNetwork;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}