{"ast":null,"code":"import _slicedToArray from \"/Users/liusu/Desktop/h5_free/game/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState } from 'react';\nimport useMemoizedFn from '../useMemoizedFn';\nfunction useMap(initialValue) {\n  var getInitValue = function getInitValue() {\n    return initialValue === undefined ? new Map() : new Map(initialValue);\n  };\n  var _useState = useState(function () {\n      return getInitValue();\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    map = _useState2[0],\n    setMap = _useState2[1];\n  var set = function set(key, entry) {\n    setMap(function (prev) {\n      var temp = new Map(prev);\n      temp.set(key, entry);\n      return temp;\n    });\n  };\n  var setAll = function setAll(newMap) {\n    setMap(new Map(newMap));\n  };\n  var remove = function remove(key) {\n    setMap(function (prev) {\n      var temp = new Map(prev);\n      temp.delete(key);\n      return temp;\n    });\n  };\n  var reset = function reset() {\n    return setMap(getInitValue());\n  };\n  var get = function get(key) {\n    return map.get(key);\n  };\n  return [map, {\n    set: useMemoizedFn(set),\n    setAll: useMemoizedFn(setAll),\n    remove: useMemoizedFn(remove),\n    reset: useMemoizedFn(reset),\n    get: useMemoizedFn(get)\n  }];\n}\nexport default useMap;","map":{"version":3,"names":["useState","useMemoizedFn","useMap","initialValue","getInitValue","undefined","Map","_useState","_useState2","_slicedToArray","map","setMap","set","key","entry","prev","temp","setAll","newMap","remove","delete","reset","get"],"sources":["/Users/liusu/Desktop/h5_free/game/node_modules/ahooks/es/useMap/index.js"],"sourcesContent":["import { useState } from 'react';\nimport useMemoizedFn from '../useMemoizedFn';\nfunction useMap(initialValue) {\n  const getInitValue = () => {\n    return initialValue === undefined ? new Map() : new Map(initialValue);\n  };\n  const [map, setMap] = useState(() => getInitValue());\n  const set = (key, entry) => {\n    setMap(prev => {\n      const temp = new Map(prev);\n      temp.set(key, entry);\n      return temp;\n    });\n  };\n  const setAll = newMap => {\n    setMap(new Map(newMap));\n  };\n  const remove = key => {\n    setMap(prev => {\n      const temp = new Map(prev);\n      temp.delete(key);\n      return temp;\n    });\n  };\n  const reset = () => setMap(getInitValue());\n  const get = key => map.get(key);\n  return [map, {\n    set: useMemoizedFn(set),\n    setAll: useMemoizedFn(setAll),\n    remove: useMemoizedFn(remove),\n    reset: useMemoizedFn(reset),\n    get: useMemoizedFn(get)\n  }];\n}\nexport default useMap;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,SAASC,MAAMA,CAACC,YAAY,EAAE;EAC5B,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,OAAOD,YAAY,KAAKE,SAAS,GAAG,IAAIC,GAAG,EAAE,GAAG,IAAIA,GAAG,CAACH,YAAY,CAAC;EACvE,CAAC;EACD,IAAAI,SAAA,GAAsBP,QAAQ,CAAC;MAAA,OAAMI,YAAY,EAAE;IAAA,EAAC;IAAAI,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,GAAG,GAAAF,UAAA;IAAEG,MAAM,GAAAH,UAAA;EAClB,IAAMI,GAAG,GAAG,SAANA,GAAGA,CAAIC,GAAG,EAAEC,KAAK,EAAK;IAC1BH,MAAM,CAAC,UAAAI,IAAI,EAAI;MACb,IAAMC,IAAI,GAAG,IAAIV,GAAG,CAACS,IAAI,CAAC;MAC1BC,IAAI,CAACJ,GAAG,CAACC,GAAG,EAAEC,KAAK,CAAC;MACpB,OAAOE,IAAI;IACb,CAAC,CAAC;EACJ,CAAC;EACD,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAGC,MAAM,EAAI;IACvBP,MAAM,CAAC,IAAIL,GAAG,CAACY,MAAM,CAAC,CAAC;EACzB,CAAC;EACD,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAGN,GAAG,EAAI;IACpBF,MAAM,CAAC,UAAAI,IAAI,EAAI;MACb,IAAMC,IAAI,GAAG,IAAIV,GAAG,CAACS,IAAI,CAAC;MAC1BC,IAAI,CAACI,MAAM,CAACP,GAAG,CAAC;MAChB,OAAOG,IAAI;IACb,CAAC,CAAC;EACJ,CAAC;EACD,IAAMK,KAAK,GAAG,SAARA,KAAKA,CAAA;IAAA,OAASV,MAAM,CAACP,YAAY,EAAE,CAAC;EAAA;EAC1C,IAAMkB,GAAG,GAAG,SAANA,GAAGA,CAAGT,GAAG;IAAA,OAAIH,GAAG,CAACY,GAAG,CAACT,GAAG,CAAC;EAAA;EAC/B,OAAO,CAACH,GAAG,EAAE;IACXE,GAAG,EAAEX,aAAa,CAACW,GAAG,CAAC;IACvBK,MAAM,EAAEhB,aAAa,CAACgB,MAAM,CAAC;IAC7BE,MAAM,EAAElB,aAAa,CAACkB,MAAM,CAAC;IAC7BE,KAAK,EAAEpB,aAAa,CAACoB,KAAK,CAAC;IAC3BC,GAAG,EAAErB,aAAa,CAACqB,GAAG;EACxB,CAAC,CAAC;AACJ;AACA,eAAepB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}