{"ast":null,"code":"import _slicedToArray from \"/Users/liusu/Desktop/h5_free/game/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useMemo, useState } from 'react';\nfunction useToggle() {\n  var defaultValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var reverseValue = arguments.length > 1 ? arguments[1] : undefined;\n  var _useState = useState(defaultValue),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var actions = useMemo(function () {\n    var reverseValueOrigin = reverseValue === undefined ? !defaultValue : reverseValue;\n    var toggle = function toggle() {\n      return setState(function (s) {\n        return s === defaultValue ? reverseValueOrigin : defaultValue;\n      });\n    };\n    var set = function set(value) {\n      return setState(value);\n    };\n    var setLeft = function setLeft() {\n      return setState(defaultValue);\n    };\n    var setRight = function setRight() {\n      return setState(reverseValueOrigin);\n    };\n    return {\n      toggle: toggle,\n      set: set,\n      setLeft: setLeft,\n      setRight: setRight\n    };\n    // useToggle ignore value change\n    // }, [defaultValue, reverseValue]);\n  }, []);\n  return [state, actions];\n}\nexport default useToggle;","map":{"version":3,"names":["useMemo","useState","useToggle","defaultValue","arguments","length","undefined","reverseValue","_useState","_useState2","_slicedToArray","state","setState","actions","reverseValueOrigin","toggle","s","set","value","setLeft","setRight"],"sources":["/Users/liusu/Desktop/h5_free/game/node_modules/ahooks/es/useToggle/index.js"],"sourcesContent":["import { useMemo, useState } from 'react';\nfunction useToggle(defaultValue = false, reverseValue) {\n  const [state, setState] = useState(defaultValue);\n  const actions = useMemo(() => {\n    const reverseValueOrigin = reverseValue === undefined ? !defaultValue : reverseValue;\n    const toggle = () => setState(s => s === defaultValue ? reverseValueOrigin : defaultValue);\n    const set = value => setState(value);\n    const setLeft = () => setState(defaultValue);\n    const setRight = () => setState(reverseValueOrigin);\n    return {\n      toggle,\n      set,\n      setLeft,\n      setRight\n    };\n    // useToggle ignore value change\n    // }, [defaultValue, reverseValue]);\n  }, []);\n  return [state, actions];\n}\nexport default useToggle;"],"mappings":";AAAA,SAASA,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACzC,SAASC,SAASA,CAAA,EAAqC;EAAA,IAApCC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAAA,IAAEG,YAAY,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACnD,IAAAE,SAAA,GAA0BP,QAAQ,CAACE,YAAY,CAAC;IAAAM,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAMI,OAAO,GAAGb,OAAO,CAAC,YAAM;IAC5B,IAAMc,kBAAkB,GAAGP,YAAY,KAAKD,SAAS,GAAG,CAACH,YAAY,GAAGI,YAAY;IACpF,IAAMQ,MAAM,GAAG,SAATA,MAAMA,CAAA;MAAA,OAASH,QAAQ,CAAC,UAAAI,CAAC;QAAA,OAAIA,CAAC,KAAKb,YAAY,GAAGW,kBAAkB,GAAGX,YAAY;MAAA,EAAC;IAAA;IAC1F,IAAMc,GAAG,GAAG,SAANA,GAAGA,CAAGC,KAAK;MAAA,OAAIN,QAAQ,CAACM,KAAK,CAAC;IAAA;IACpC,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA;MAAA,OAASP,QAAQ,CAACT,YAAY,CAAC;IAAA;IAC5C,IAAMiB,QAAQ,GAAG,SAAXA,QAAQA,CAAA;MAAA,OAASR,QAAQ,CAACE,kBAAkB,CAAC;IAAA;IACnD,OAAO;MACLC,MAAM,EAANA,MAAM;MACNE,GAAG,EAAHA,GAAG;MACHE,OAAO,EAAPA,OAAO;MACPC,QAAQ,EAARA;IACF,CAAC;IACD;IACA;EACF,CAAC,EAAE,EAAE,CAAC;EACN,OAAO,CAACT,KAAK,EAAEE,OAAO,CAAC;AACzB;AACA,eAAeX,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}