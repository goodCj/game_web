{"ast":null,"code":"import _slicedToArray from \"/Users/liusu/Desktop/h5_free/game/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState } from 'react';\nimport useMemoizedFn from '../useMemoizedFn';\nfunction useSet(initialValue) {\n  var getInitValue = function getInitValue() {\n    return initialValue === undefined ? new Set() : new Set(initialValue);\n  };\n  var _useState = useState(function () {\n      return getInitValue();\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    set = _useState2[0],\n    setSet = _useState2[1];\n  var add = function add(key) {\n    if (set.has(key)) {\n      return;\n    }\n    setSet(function (prevSet) {\n      var temp = new Set(prevSet);\n      temp.add(key);\n      return temp;\n    });\n  };\n  var remove = function remove(key) {\n    if (!set.has(key)) {\n      return;\n    }\n    setSet(function (prevSet) {\n      var temp = new Set(prevSet);\n      temp.delete(key);\n      return temp;\n    });\n  };\n  var reset = function reset() {\n    return setSet(getInitValue());\n  };\n  return [set, {\n    add: useMemoizedFn(add),\n    remove: useMemoizedFn(remove),\n    reset: useMemoizedFn(reset)\n  }];\n}\nexport default useSet;","map":{"version":3,"names":["useState","useMemoizedFn","useSet","initialValue","getInitValue","undefined","Set","_useState","_useState2","_slicedToArray","set","setSet","add","key","has","prevSet","temp","remove","delete","reset"],"sources":["/Users/liusu/Desktop/h5_free/game/node_modules/ahooks/es/useSet/index.js"],"sourcesContent":["import { useState } from 'react';\nimport useMemoizedFn from '../useMemoizedFn';\nfunction useSet(initialValue) {\n  const getInitValue = () => {\n    return initialValue === undefined ? new Set() : new Set(initialValue);\n  };\n  const [set, setSet] = useState(() => getInitValue());\n  const add = key => {\n    if (set.has(key)) {\n      return;\n    }\n    setSet(prevSet => {\n      const temp = new Set(prevSet);\n      temp.add(key);\n      return temp;\n    });\n  };\n  const remove = key => {\n    if (!set.has(key)) {\n      return;\n    }\n    setSet(prevSet => {\n      const temp = new Set(prevSet);\n      temp.delete(key);\n      return temp;\n    });\n  };\n  const reset = () => setSet(getInitValue());\n  return [set, {\n    add: useMemoizedFn(add),\n    remove: useMemoizedFn(remove),\n    reset: useMemoizedFn(reset)\n  }];\n}\nexport default useSet;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,SAASC,MAAMA,CAACC,YAAY,EAAE;EAC5B,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,OAAOD,YAAY,KAAKE,SAAS,GAAG,IAAIC,GAAG,EAAE,GAAG,IAAIA,GAAG,CAACH,YAAY,CAAC;EACvE,CAAC;EACD,IAAAI,SAAA,GAAsBP,QAAQ,CAAC;MAAA,OAAMI,YAAY,EAAE;IAAA,EAAC;IAAAI,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,GAAG,GAAAF,UAAA;IAAEG,MAAM,GAAAH,UAAA;EAClB,IAAMI,GAAG,GAAG,SAANA,GAAGA,CAAGC,GAAG,EAAI;IACjB,IAAIH,GAAG,CAACI,GAAG,CAACD,GAAG,CAAC,EAAE;MAChB;IACF;IACAF,MAAM,CAAC,UAAAI,OAAO,EAAI;MAChB,IAAMC,IAAI,GAAG,IAAIV,GAAG,CAACS,OAAO,CAAC;MAC7BC,IAAI,CAACJ,GAAG,CAACC,GAAG,CAAC;MACb,OAAOG,IAAI;IACb,CAAC,CAAC;EACJ,CAAC;EACD,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAGJ,GAAG,EAAI;IACpB,IAAI,CAACH,GAAG,CAACI,GAAG,CAACD,GAAG,CAAC,EAAE;MACjB;IACF;IACAF,MAAM,CAAC,UAAAI,OAAO,EAAI;MAChB,IAAMC,IAAI,GAAG,IAAIV,GAAG,CAACS,OAAO,CAAC;MAC7BC,IAAI,CAACE,MAAM,CAACL,GAAG,CAAC;MAChB,OAAOG,IAAI;IACb,CAAC,CAAC;EACJ,CAAC;EACD,IAAMG,KAAK,GAAG,SAARA,KAAKA,CAAA;IAAA,OAASR,MAAM,CAACP,YAAY,EAAE,CAAC;EAAA;EAC1C,OAAO,CAACM,GAAG,EAAE;IACXE,GAAG,EAAEX,aAAa,CAACW,GAAG,CAAC;IACvBK,MAAM,EAAEhB,aAAa,CAACgB,MAAM,CAAC;IAC7BE,KAAK,EAAElB,aAAa,CAACkB,KAAK;EAC5B,CAAC,CAAC;AACJ;AACA,eAAejB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}