{"ast":null,"code":"import _toConsumableArray from \"/Users/liusu/Desktop/h5_free/game/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/liusu/Desktop/h5_free/game/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { forwardRef, useImperativeHandle, useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from 'ahooks';\nimport { withNativeProps } from '../../utils/native-props';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { devError } from '../../utils/dev-log';\nvar classPrefix = 'adm-text-area';\nvar defaultProps = {\n  rows: 2,\n  showCount: false,\n  autoSize: false,\n  defaultValue: ''\n};\nexport var TextArea = forwardRef(function (p, ref) {\n  var props = mergeProps(defaultProps, p);\n  var autoSize = props.autoSize,\n    showCount = props.showCount,\n    maxLength = props.maxLength;\n  var _usePropsValue = usePropsValue(Object.assign(Object.assign({}, props), {\n      value: props.value === null ? '' : props.value\n    })),\n    _usePropsValue2 = _slicedToArray(_usePropsValue, 2),\n    value = _usePropsValue2[0],\n    setValue = _usePropsValue2[1];\n  if (props.value === null) {\n    devError('TextArea', '`value` prop on `TextArea` should not be `null`. Consider using an empty string to clear the component.');\n  }\n  var nativeTextAreaRef = useRef(null);\n  // https://github.com/ant-design/ant-design-mobile/issues/5961\n  var heightRef = useRef('auto');\n  useImperativeHandle(ref, function () {\n    return {\n      clear: function clear() {\n        setValue('');\n      },\n      focus: function focus() {\n        var _a;\n        (_a = nativeTextAreaRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: function blur() {\n        var _a;\n        (_a = nativeTextAreaRef.current) === null || _a === void 0 ? void 0 : _a.blur();\n      },\n      get nativeElement() {\n        return nativeTextAreaRef.current;\n      }\n    };\n  });\n  useIsomorphicLayoutEffect(function () {\n    if (!autoSize) return;\n    var textArea = nativeTextAreaRef.current;\n    if (!textArea) return;\n    textArea.style.height = heightRef.current;\n    var height = textArea.scrollHeight;\n    if (typeof autoSize === 'object') {\n      var computedStyle = window.getComputedStyle(textArea);\n      var lineHeight = parseFloat(computedStyle.lineHeight);\n      if (autoSize.minRows) {\n        height = Math.max(height, autoSize.minRows * lineHeight);\n      }\n      if (autoSize.maxRows) {\n        height = Math.min(height, autoSize.maxRows * lineHeight);\n      }\n    }\n    heightRef.current = \"\".concat(height, \"px\");\n    textArea.style.height = \"\".concat(height, \"px\");\n  }, [value, autoSize]);\n  var compositingRef = useRef(false);\n  var count;\n  var valueLength = _toConsumableArray(value).length;\n  if (typeof showCount === 'function') {\n    count = showCount(valueLength, maxLength);\n  } else if (showCount) {\n    count = React.createElement(\"div\", {\n      className: \"\".concat(classPrefix, \"-count\")\n    }, maxLength === undefined ? valueLength : valueLength + '/' + maxLength);\n  }\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classPrefix\n  }, React.createElement(\"textarea\", {\n    ref: nativeTextAreaRef,\n    className: \"\".concat(classPrefix, \"-element\"),\n    rows: props.rows,\n    value: value,\n    placeholder: props.placeholder,\n    onChange: function onChange(e) {\n      var v = e.target.value;\n      if (maxLength && !compositingRef.current) {\n        v = _toConsumableArray(v).slice(0, maxLength).join('');\n      }\n      setValue(v);\n    },\n    id: props.id,\n    onCompositionStart: function onCompositionStart(e) {\n      var _a;\n      compositingRef.current = true;\n      (_a = props.onCompositionStart) === null || _a === void 0 ? void 0 : _a.call(props, e);\n    },\n    onCompositionEnd: function onCompositionEnd(e) {\n      var _a;\n      compositingRef.current = false;\n      if (maxLength) {\n        var v = e.target.value;\n        setValue(_toConsumableArray(v).slice(0, maxLength).join(''));\n      }\n      (_a = props.onCompositionEnd) === null || _a === void 0 ? void 0 : _a.call(props, e);\n    },\n    autoComplete: props.autoComplete,\n    autoFocus: props.autoFocus,\n    disabled: props.disabled,\n    readOnly: props.readOnly,\n    name: props.name,\n    onFocus: props.onFocus,\n    onBlur: props.onBlur,\n    onClick: props.onClick\n  }), count));\n});\nTextArea.defaultProps = defaultProps;","map":{"version":3,"names":["React","forwardRef","useImperativeHandle","useRef","useIsomorphicLayoutEffect","withNativeProps","usePropsValue","mergeProps","devError","classPrefix","defaultProps","rows","showCount","autoSize","defaultValue","TextArea","p","ref","props","maxLength","_usePropsValue","Object","assign","value","_usePropsValue2","_slicedToArray","setValue","nativeTextAreaRef","heightRef","clear","focus","_a","current","blur","nativeElement","textArea","style","height","scrollHeight","computedStyle","window","getComputedStyle","lineHeight","parseFloat","minRows","Math","max","maxRows","min","concat","compositingRef","count","valueLength","_toConsumableArray","length","createElement","className","undefined","placeholder","onChange","e","v","target","slice","join","id","onCompositionStart","call","onCompositionEnd","autoComplete","autoFocus","disabled","readOnly","name","onFocus","onBlur","onClick"],"sources":["/Users/liusu/Desktop/h5_free/game/node_modules/antd-mobile/es/components/text-area/text-area.js"],"sourcesContent":["import React, { forwardRef, useImperativeHandle, useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from 'ahooks';\nimport { withNativeProps } from '../../utils/native-props';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { devError } from '../../utils/dev-log';\nconst classPrefix = 'adm-text-area';\nconst defaultProps = {\n  rows: 2,\n  showCount: false,\n  autoSize: false,\n  defaultValue: ''\n};\nexport const TextArea = forwardRef((p, ref) => {\n  const props = mergeProps(defaultProps, p);\n  const {\n    autoSize,\n    showCount,\n    maxLength\n  } = props;\n  const [value, setValue] = usePropsValue(Object.assign(Object.assign({}, props), {\n    value: props.value === null ? '' : props.value\n  }));\n  if (props.value === null) {\n    devError('TextArea', '`value` prop on `TextArea` should not be `null`. Consider using an empty string to clear the component.');\n  }\n  const nativeTextAreaRef = useRef(null);\n  // https://github.com/ant-design/ant-design-mobile/issues/5961\n  const heightRef = useRef('auto');\n  useImperativeHandle(ref, () => ({\n    clear: () => {\n      setValue('');\n    },\n    focus: () => {\n      var _a;\n      (_a = nativeTextAreaRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    },\n    blur: () => {\n      var _a;\n      (_a = nativeTextAreaRef.current) === null || _a === void 0 ? void 0 : _a.blur();\n    },\n    get nativeElement() {\n      return nativeTextAreaRef.current;\n    }\n  }));\n  useIsomorphicLayoutEffect(() => {\n    if (!autoSize) return;\n    const textArea = nativeTextAreaRef.current;\n    if (!textArea) return;\n    textArea.style.height = heightRef.current;\n    let height = textArea.scrollHeight;\n    if (typeof autoSize === 'object') {\n      const computedStyle = window.getComputedStyle(textArea);\n      const lineHeight = parseFloat(computedStyle.lineHeight);\n      if (autoSize.minRows) {\n        height = Math.max(height, autoSize.minRows * lineHeight);\n      }\n      if (autoSize.maxRows) {\n        height = Math.min(height, autoSize.maxRows * lineHeight);\n      }\n    }\n    heightRef.current = `${height}px`;\n    textArea.style.height = `${height}px`;\n  }, [value, autoSize]);\n  const compositingRef = useRef(false);\n  let count;\n  const valueLength = [...value].length;\n  if (typeof showCount === 'function') {\n    count = showCount(valueLength, maxLength);\n  } else if (showCount) {\n    count = React.createElement(\"div\", {\n      className: `${classPrefix}-count`\n    }, maxLength === undefined ? valueLength : valueLength + '/' + maxLength);\n  }\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classPrefix\n  }, React.createElement(\"textarea\", {\n    ref: nativeTextAreaRef,\n    className: `${classPrefix}-element`,\n    rows: props.rows,\n    value: value,\n    placeholder: props.placeholder,\n    onChange: e => {\n      let v = e.target.value;\n      if (maxLength && !compositingRef.current) {\n        v = [...v].slice(0, maxLength).join('');\n      }\n      setValue(v);\n    },\n    id: props.id,\n    onCompositionStart: e => {\n      var _a;\n      compositingRef.current = true;\n      (_a = props.onCompositionStart) === null || _a === void 0 ? void 0 : _a.call(props, e);\n    },\n    onCompositionEnd: e => {\n      var _a;\n      compositingRef.current = false;\n      if (maxLength) {\n        const v = e.target.value;\n        setValue([...v].slice(0, maxLength).join(''));\n      }\n      (_a = props.onCompositionEnd) === null || _a === void 0 ? void 0 : _a.call(props, e);\n    },\n    autoComplete: props.autoComplete,\n    autoFocus: props.autoFocus,\n    disabled: props.disabled,\n    readOnly: props.readOnly,\n    name: props.name,\n    onFocus: props.onFocus,\n    onBlur: props.onBlur,\n    onClick: props.onClick\n  }), count));\n});\nTextArea.defaultProps = defaultProps;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}