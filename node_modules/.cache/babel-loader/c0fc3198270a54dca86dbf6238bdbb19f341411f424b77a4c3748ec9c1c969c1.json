{"ast":null,"code":"// 找到树的深度\nexport function getTreeDeep(treeData) {\n  var childrenName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'children';\n  var walker = function walker(tree) {\n    var deep = 0;\n    tree.forEach(function (item) {\n      if (item[childrenName]) {\n        deep = Math.max(deep, walker(item[childrenName]) + 1);\n      } else {\n        deep = Math.max(deep, 1);\n      }\n    });\n    return deep;\n  };\n  return walker(treeData);\n}","map":{"version":3,"names":["getTreeDeep","treeData","childrenName","arguments","length","undefined","walker","tree","deep","forEach","item","Math","max"],"sources":["/Users/liusu/Desktop/h5_free/game/node_modules/antd-mobile/es/utils/tree.js"],"sourcesContent":["// 找到树的深度\nexport function getTreeDeep(treeData, childrenName = 'children') {\n  const walker = tree => {\n    let deep = 0;\n    tree.forEach(item => {\n      if (item[childrenName]) {\n        deep = Math.max(deep, walker(item[childrenName]) + 1);\n      } else {\n        deep = Math.max(deep, 1);\n      }\n    });\n    return deep;\n  };\n  return walker(treeData);\n}"],"mappings":"AAAA;AACA,OAAO,SAASA,WAAWA,CAACC,QAAQ,EAA6B;EAAA,IAA3BC,YAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,UAAU;EAC7D,IAAMG,MAAM,GAAG,SAATA,MAAMA,CAAGC,IAAI,EAAI;IACrB,IAAIC,IAAI,GAAG,CAAC;IACZD,IAAI,CAACE,OAAO,CAAC,UAAAC,IAAI,EAAI;MACnB,IAAIA,IAAI,CAACR,YAAY,CAAC,EAAE;QACtBM,IAAI,GAAGG,IAAI,CAACC,GAAG,CAACJ,IAAI,EAAEF,MAAM,CAACI,IAAI,CAACR,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC;MACvD,CAAC,MAAM;QACLM,IAAI,GAAGG,IAAI,CAACC,GAAG,CAACJ,IAAI,EAAE,CAAC,CAAC;MAC1B;IACF,CAAC,CAAC;IACF,OAAOA,IAAI;EACb,CAAC;EACD,OAAOF,MAAM,CAACL,QAAQ,CAAC;AACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}