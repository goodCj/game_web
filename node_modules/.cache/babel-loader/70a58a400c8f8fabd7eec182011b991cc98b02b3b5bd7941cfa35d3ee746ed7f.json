{"ast":null,"code":"import React, { useCallback, useMemo } from 'react';\nimport PickerView from '../picker-view';\nimport { withNativeProps } from '../../utils/native-props';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { generateDatePickerColumns, convertDateToStringArray, convertStringArrayToDate } from '../date-picker/date-picker-utils';\nimport useRenderLabel from './useRenderLabel';\nconst thisYear = new Date().getFullYear();\nconst defaultProps = {\n  min: new Date(new Date().setFullYear(thisYear - 10)),\n  max: new Date(new Date().setFullYear(thisYear + 10)),\n  precision: 'day'\n};\nexport const DatePickerView = p => {\n  var _a;\n  const props = mergeProps(defaultProps, p);\n  const {\n    renderLabel\n  } = props;\n  const [value, setValue] = usePropsValue({\n    value: props.value,\n    defaultValue: (_a = props.defaultValue) !== null && _a !== void 0 ? _a : null\n  });\n  const mergedRenderLabel = useRenderLabel(renderLabel);\n  const pickerValue = useMemo(() => convertDateToStringArray(value, props.precision), [value, props.precision]);\n  const onChange = useCallback(val => {\n    var _a;\n    const date = convertStringArrayToDate(val, props.precision);\n    if (date) {\n      setValue(date);\n      (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, date);\n    }\n  }, [props.onChange, props.precision]);\n  return withNativeProps(props, React.createElement(PickerView, {\n    columns: selected => generateDatePickerColumns(selected, props.min, props.max, props.precision, mergedRenderLabel, props.filter),\n    loading: props.loading,\n    loadingContent: props.loadingContent,\n    value: pickerValue,\n    mouseWheel: props.mouseWheel,\n    onChange: onChange\n  }));\n};","map":{"version":3,"names":["React","useCallback","useMemo","PickerView","withNativeProps","mergeProps","usePropsValue","generateDatePickerColumns","convertDateToStringArray","convertStringArrayToDate","useRenderLabel","thisYear","Date","getFullYear","defaultProps","min","setFullYear","max","precision","DatePickerView","p","_a","props","renderLabel","value","setValue","defaultValue","mergedRenderLabel","pickerValue","onChange","val","date","call","createElement","columns","selected","filter","loading","loadingContent","mouseWheel"],"sources":["/Users/liusu/Desktop/h5_free/game/node_modules/antd-mobile/es/components/date-picker-view/date-picker-view.js"],"sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport PickerView from '../picker-view';\nimport { withNativeProps } from '../../utils/native-props';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { generateDatePickerColumns, convertDateToStringArray, convertStringArrayToDate } from '../date-picker/date-picker-utils';\nimport useRenderLabel from './useRenderLabel';\nconst thisYear = new Date().getFullYear();\nconst defaultProps = {\n  min: new Date(new Date().setFullYear(thisYear - 10)),\n  max: new Date(new Date().setFullYear(thisYear + 10)),\n  precision: 'day'\n};\nexport const DatePickerView = p => {\n  var _a;\n  const props = mergeProps(defaultProps, p);\n  const {\n    renderLabel\n  } = props;\n  const [value, setValue] = usePropsValue({\n    value: props.value,\n    defaultValue: (_a = props.defaultValue) !== null && _a !== void 0 ? _a : null\n  });\n  const mergedRenderLabel = useRenderLabel(renderLabel);\n  const pickerValue = useMemo(() => convertDateToStringArray(value, props.precision), [value, props.precision]);\n  const onChange = useCallback(val => {\n    var _a;\n    const date = convertStringArrayToDate(val, props.precision);\n    if (date) {\n      setValue(date);\n      (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, date);\n    }\n  }, [props.onChange, props.precision]);\n  return withNativeProps(props, React.createElement(PickerView, {\n    columns: selected => generateDatePickerColumns(selected, props.min, props.max, props.precision, mergedRenderLabel, props.filter),\n    loading: props.loading,\n    loadingContent: props.loadingContent,\n    value: pickerValue,\n    mouseWheel: props.mouseWheel,\n    onChange: onChange\n  }));\n};"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AACnD,OAAOC,UAAU,MAAM,gBAAgB;AACvC,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,UAAU,QAAQ,gCAAgC;AAC3D,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,yBAAyB,EAAEC,wBAAwB,EAAEC,wBAAwB,QAAQ,kCAAkC;AAChI,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,MAAMC,QAAQ,GAAG,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;AACzC,MAAMC,YAAY,GAAG;EACnBC,GAAG,EAAE,IAAIH,IAAI,CAAC,IAAIA,IAAI,EAAE,CAACI,WAAW,CAACL,QAAQ,GAAG,EAAE,CAAC,CAAC;EACpDM,GAAG,EAAE,IAAIL,IAAI,CAAC,IAAIA,IAAI,EAAE,CAACI,WAAW,CAACL,QAAQ,GAAG,EAAE,CAAC,CAAC;EACpDO,SAAS,EAAE;AACb,CAAC;AACD,OAAO,MAAMC,cAAc,GAAGC,CAAC,IAAI;EACjC,IAAIC,EAAE;EACN,MAAMC,KAAK,GAAGjB,UAAU,CAACS,YAAY,EAAEM,CAAC,CAAC;EACzC,MAAM;IACJG;EACF,CAAC,GAAGD,KAAK;EACT,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,aAAa,CAAC;IACtCkB,KAAK,EAAEF,KAAK,CAACE,KAAK;IAClBE,YAAY,EAAE,CAACL,EAAE,GAAGC,KAAK,CAACI,YAAY,MAAM,IAAI,IAAIL,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG;EAC3E,CAAC,CAAC;EACF,MAAMM,iBAAiB,GAAGjB,cAAc,CAACa,WAAW,CAAC;EACrD,MAAMK,WAAW,GAAG1B,OAAO,CAAC,MAAMM,wBAAwB,CAACgB,KAAK,EAAEF,KAAK,CAACJ,SAAS,CAAC,EAAE,CAACM,KAAK,EAAEF,KAAK,CAACJ,SAAS,CAAC,CAAC;EAC7G,MAAMW,QAAQ,GAAG5B,WAAW,CAAC6B,GAAG,IAAI;IAClC,IAAIT,EAAE;IACN,MAAMU,IAAI,GAAGtB,wBAAwB,CAACqB,GAAG,EAAER,KAAK,CAACJ,SAAS,CAAC;IAC3D,IAAIa,IAAI,EAAE;MACRN,QAAQ,CAACM,IAAI,CAAC;MACd,CAACV,EAAE,GAAGC,KAAK,CAACO,QAAQ,MAAM,IAAI,IAAIR,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACW,IAAI,CAACV,KAAK,EAAES,IAAI,CAAC;IACjF;EACF,CAAC,EAAE,CAACT,KAAK,CAACO,QAAQ,EAAEP,KAAK,CAACJ,SAAS,CAAC,CAAC;EACrC,OAAOd,eAAe,CAACkB,KAAK,EAAEtB,KAAK,CAACiC,aAAa,CAAC9B,UAAU,EAAE;IAC5D+B,OAAO,EAAEC,QAAQ,IAAI5B,yBAAyB,CAAC4B,QAAQ,EAAEb,KAAK,CAACP,GAAG,EAAEO,KAAK,CAACL,GAAG,EAAEK,KAAK,CAACJ,SAAS,EAAES,iBAAiB,EAAEL,KAAK,CAACc,MAAM,CAAC;IAChIC,OAAO,EAAEf,KAAK,CAACe,OAAO;IACtBC,cAAc,EAAEhB,KAAK,CAACgB,cAAc;IACpCd,KAAK,EAAEI,WAAW;IAClBW,UAAU,EAAEjB,KAAK,CAACiB,UAAU;IAC5BV,QAAQ,EAAEA;EACZ,CAAC,CAAC,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}