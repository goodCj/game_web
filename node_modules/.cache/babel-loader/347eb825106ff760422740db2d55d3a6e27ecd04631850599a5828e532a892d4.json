{"ast":null,"code":"import _toConsumableArray from \"/Users/liusu/Desktop/h5_free/game/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/liusu/Desktop/h5_free/game/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useCallback, useRef, useState } from 'react';\nvar useDynamicList = function useDynamicList() {\n  var initialList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var counterRef = useRef(-1);\n  var keyList = useRef([]);\n  var setKey = useCallback(function (index) {\n    counterRef.current += 1;\n    keyList.current.splice(index, 0, counterRef.current);\n  }, []);\n  var _useState = useState(function () {\n      initialList.forEach(function (_, index) {\n        setKey(index);\n      });\n      return initialList;\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    list = _useState2[0],\n    setList = _useState2[1];\n  var resetList = useCallback(function (newList) {\n    keyList.current = [];\n    setList(function () {\n      newList.forEach(function (_, index) {\n        setKey(index);\n      });\n      return newList;\n    });\n  }, []);\n  var insert = useCallback(function (index, item) {\n    setList(function (l) {\n      var temp = _toConsumableArray(l);\n      temp.splice(index, 0, item);\n      setKey(index);\n      return temp;\n    });\n  }, []);\n  var getKey = useCallback(function (index) {\n    return keyList.current[index];\n  }, []);\n  var getIndex = useCallback(function (key) {\n    return keyList.current.findIndex(function (ele) {\n      return ele === key;\n    });\n  }, []);\n  var merge = useCallback(function (index, items) {\n    setList(function (l) {\n      var temp = _toConsumableArray(l);\n      items.forEach(function (_, i) {\n        setKey(index + i);\n      });\n      temp.splice.apply(temp, [index, 0].concat(_toConsumableArray(items)));\n      return temp;\n    });\n  }, []);\n  var replace = useCallback(function (index, item) {\n    setList(function (l) {\n      var temp = _toConsumableArray(l);\n      temp[index] = item;\n      return temp;\n    });\n  }, []);\n  var remove = useCallback(function (index) {\n    setList(function (l) {\n      var temp = _toConsumableArray(l);\n      temp.splice(index, 1);\n      // remove keys if necessary\n      try {\n        keyList.current.splice(index, 1);\n      } catch (e) {\n        console.error(e);\n      }\n      return temp;\n    });\n  }, []);\n  var move = useCallback(function (oldIndex, newIndex) {\n    if (oldIndex === newIndex) {\n      return;\n    }\n    setList(function (l) {\n      var newList = _toConsumableArray(l);\n      var temp = newList.filter(function (_, index) {\n        return index !== oldIndex;\n      });\n      temp.splice(newIndex, 0, newList[oldIndex]);\n      // move keys if necessary\n      try {\n        var keyTemp = keyList.current.filter(function (_, index) {\n          return index !== oldIndex;\n        });\n        keyTemp.splice(newIndex, 0, keyList.current[oldIndex]);\n        keyList.current = keyTemp;\n      } catch (e) {\n        console.error(e);\n      }\n      return temp;\n    });\n  }, []);\n  var push = useCallback(function (item) {\n    setList(function (l) {\n      setKey(l.length);\n      return l.concat([item]);\n    });\n  }, []);\n  var pop = useCallback(function () {\n    // remove keys if necessary\n    try {\n      keyList.current = keyList.current.slice(0, keyList.current.length - 1);\n    } catch (e) {\n      console.error(e);\n    }\n    setList(function (l) {\n      return l.slice(0, l.length - 1);\n    });\n  }, []);\n  var unshift = useCallback(function (item) {\n    setList(function (l) {\n      setKey(0);\n      return [item].concat(l);\n    });\n  }, []);\n  var shift = useCallback(function () {\n    // remove keys if necessary\n    try {\n      keyList.current = keyList.current.slice(1, keyList.current.length);\n    } catch (e) {\n      console.error(e);\n    }\n    setList(function (l) {\n      return l.slice(1, l.length);\n    });\n  }, []);\n  var sortList = useCallback(function (result) {\n    return result.map(function (item, index) {\n      return {\n        key: index,\n        item: item\n      };\n    }) // add index into obj\n    .sort(function (a, b) {\n      return getIndex(a.key) - getIndex(b.key);\n    }) // sort based on the index of table\n    .filter(function (item) {\n      return !!item.item;\n    }) // remove undefined(s)\n    .map(function (item) {\n      return item.item;\n    });\n  },\n  // retrive the data\n  []);\n  return {\n    list: list,\n    insert: insert,\n    merge: merge,\n    replace: replace,\n    remove: remove,\n    getKey: getKey,\n    getIndex: getIndex,\n    move: move,\n    push: push,\n    pop: pop,\n    unshift: unshift,\n    shift: shift,\n    sortList: sortList,\n    resetList: resetList\n  };\n};\nexport default useDynamicList;","map":{"version":3,"names":["useCallback","useRef","useState","useDynamicList","initialList","arguments","length","undefined","counterRef","keyList","setKey","index","current","splice","_useState","forEach","_","_useState2","_slicedToArray","list","setList","resetList","newList","insert","item","l","temp","_toConsumableArray","getKey","getIndex","key","findIndex","ele","merge","items","i","apply","concat","replace","remove","e","console","error","move","oldIndex","newIndex","filter","keyTemp","push","pop","slice","unshift","shift","sortList","result","map","sort","a","b"],"sources":["/Users/liusu/Desktop/h5_free/game/node_modules/ahooks/es/useDynamicList/index.js"],"sourcesContent":["import { useCallback, useRef, useState } from 'react';\nconst useDynamicList = (initialList = []) => {\n  const counterRef = useRef(-1);\n  const keyList = useRef([]);\n  const setKey = useCallback(index => {\n    counterRef.current += 1;\n    keyList.current.splice(index, 0, counterRef.current);\n  }, []);\n  const [list, setList] = useState(() => {\n    initialList.forEach((_, index) => {\n      setKey(index);\n    });\n    return initialList;\n  });\n  const resetList = useCallback(newList => {\n    keyList.current = [];\n    setList(() => {\n      newList.forEach((_, index) => {\n        setKey(index);\n      });\n      return newList;\n    });\n  }, []);\n  const insert = useCallback((index, item) => {\n    setList(l => {\n      const temp = [...l];\n      temp.splice(index, 0, item);\n      setKey(index);\n      return temp;\n    });\n  }, []);\n  const getKey = useCallback(index => keyList.current[index], []);\n  const getIndex = useCallback(key => keyList.current.findIndex(ele => ele === key), []);\n  const merge = useCallback((index, items) => {\n    setList(l => {\n      const temp = [...l];\n      items.forEach((_, i) => {\n        setKey(index + i);\n      });\n      temp.splice(index, 0, ...items);\n      return temp;\n    });\n  }, []);\n  const replace = useCallback((index, item) => {\n    setList(l => {\n      const temp = [...l];\n      temp[index] = item;\n      return temp;\n    });\n  }, []);\n  const remove = useCallback(index => {\n    setList(l => {\n      const temp = [...l];\n      temp.splice(index, 1);\n      // remove keys if necessary\n      try {\n        keyList.current.splice(index, 1);\n      } catch (e) {\n        console.error(e);\n      }\n      return temp;\n    });\n  }, []);\n  const move = useCallback((oldIndex, newIndex) => {\n    if (oldIndex === newIndex) {\n      return;\n    }\n    setList(l => {\n      const newList = [...l];\n      const temp = newList.filter((_, index) => index !== oldIndex);\n      temp.splice(newIndex, 0, newList[oldIndex]);\n      // move keys if necessary\n      try {\n        const keyTemp = keyList.current.filter((_, index) => index !== oldIndex);\n        keyTemp.splice(newIndex, 0, keyList.current[oldIndex]);\n        keyList.current = keyTemp;\n      } catch (e) {\n        console.error(e);\n      }\n      return temp;\n    });\n  }, []);\n  const push = useCallback(item => {\n    setList(l => {\n      setKey(l.length);\n      return l.concat([item]);\n    });\n  }, []);\n  const pop = useCallback(() => {\n    // remove keys if necessary\n    try {\n      keyList.current = keyList.current.slice(0, keyList.current.length - 1);\n    } catch (e) {\n      console.error(e);\n    }\n    setList(l => l.slice(0, l.length - 1));\n  }, []);\n  const unshift = useCallback(item => {\n    setList(l => {\n      setKey(0);\n      return [item].concat(l);\n    });\n  }, []);\n  const shift = useCallback(() => {\n    // remove keys if necessary\n    try {\n      keyList.current = keyList.current.slice(1, keyList.current.length);\n    } catch (e) {\n      console.error(e);\n    }\n    setList(l => l.slice(1, l.length));\n  }, []);\n  const sortList = useCallback(result => result.map((item, index) => ({\n    key: index,\n    item\n  })) // add index into obj\n  .sort((a, b) => getIndex(a.key) - getIndex(b.key)) // sort based on the index of table\n  .filter(item => !!item.item) // remove undefined(s)\n  .map(item => item.item),\n  // retrive the data\n  []);\n  return {\n    list,\n    insert,\n    merge,\n    replace,\n    remove,\n    getKey,\n    getIndex,\n    move,\n    push,\n    pop,\n    unshift,\n    shift,\n    sortList,\n    resetList\n  };\n};\nexport default useDynamicList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}