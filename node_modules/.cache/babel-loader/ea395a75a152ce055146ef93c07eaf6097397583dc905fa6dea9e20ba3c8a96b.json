{"ast":null,"code":"import _slicedToArray from \"/Users/liusu/Desktop/h5_free/game/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState } from 'react';\nimport screenfull from 'screenfull';\nimport useLatest from '../useLatest';\nimport useMemoizedFn from '../useMemoizedFn';\nimport useUnmount from '../useUnmount';\nimport { getTargetElement } from '../utils/domTarget';\nvar useFullscreen = function useFullscreen(target, options) {\n  var _ref = options || {},\n    onExit = _ref.onExit,\n    onEnter = _ref.onEnter;\n  var onExitRef = useLatest(onExit);\n  var onEnterRef = useLatest(onEnter);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var onChange = function onChange() {\n    var _a, _b, _c;\n    if (screenfull.isEnabled) {\n      var el = getTargetElement(target);\n      if (!screenfull.element) {\n        (_a = onExitRef.current) === null || _a === void 0 ? void 0 : _a.call(onExitRef);\n        setState(false);\n        screenfull.off('change', onChange);\n      } else {\n        var isFullscreen = screenfull.element === el;\n        if (isFullscreen) {\n          (_b = onEnterRef.current) === null || _b === void 0 ? void 0 : _b.call(onEnterRef);\n        } else {\n          (_c = onExitRef.current) === null || _c === void 0 ? void 0 : _c.call(onExitRef);\n        }\n        setState(isFullscreen);\n      }\n    }\n  };\n  var enterFullscreen = function enterFullscreen() {\n    var el = getTargetElement(target);\n    if (!el) {\n      return;\n    }\n    if (screenfull.isEnabled) {\n      try {\n        screenfull.request(el);\n        screenfull.on('change', onChange);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  var exitFullscreen = function exitFullscreen() {\n    var el = getTargetElement(target);\n    if (screenfull.isEnabled && screenfull.element === el) {\n      screenfull.exit();\n    }\n  };\n  var toggleFullscreen = function toggleFullscreen() {\n    if (state) {\n      exitFullscreen();\n    } else {\n      enterFullscreen();\n    }\n  };\n  useUnmount(function () {\n    if (screenfull.isEnabled) {\n      screenfull.off('change', onChange);\n    }\n  });\n  return [state, {\n    enterFullscreen: useMemoizedFn(enterFullscreen),\n    exitFullscreen: useMemoizedFn(exitFullscreen),\n    toggleFullscreen: useMemoizedFn(toggleFullscreen),\n    isEnabled: screenfull.isEnabled\n  }];\n};\nexport default useFullscreen;","map":{"version":3,"names":["useState","screenfull","useLatest","useMemoizedFn","useUnmount","getTargetElement","useFullscreen","target","options","_ref","onExit","onEnter","onExitRef","onEnterRef","_useState","_useState2","_slicedToArray","state","setState","onChange","_a","_b","_c","isEnabled","el","element","current","call","off","isFullscreen","enterFullscreen","request","on","error","console","exitFullscreen","exit","toggleFullscreen"],"sources":["/Users/liusu/Desktop/h5_free/game/node_modules/ahooks/es/useFullscreen/index.js"],"sourcesContent":["import { useState } from 'react';\nimport screenfull from 'screenfull';\nimport useLatest from '../useLatest';\nimport useMemoizedFn from '../useMemoizedFn';\nimport useUnmount from '../useUnmount';\nimport { getTargetElement } from '../utils/domTarget';\nconst useFullscreen = (target, options) => {\n  const {\n    onExit,\n    onEnter\n  } = options || {};\n  const onExitRef = useLatest(onExit);\n  const onEnterRef = useLatest(onEnter);\n  const [state, setState] = useState(false);\n  const onChange = () => {\n    var _a, _b, _c;\n    if (screenfull.isEnabled) {\n      const el = getTargetElement(target);\n      if (!screenfull.element) {\n        (_a = onExitRef.current) === null || _a === void 0 ? void 0 : _a.call(onExitRef);\n        setState(false);\n        screenfull.off('change', onChange);\n      } else {\n        const isFullscreen = screenfull.element === el;\n        if (isFullscreen) {\n          (_b = onEnterRef.current) === null || _b === void 0 ? void 0 : _b.call(onEnterRef);\n        } else {\n          (_c = onExitRef.current) === null || _c === void 0 ? void 0 : _c.call(onExitRef);\n        }\n        setState(isFullscreen);\n      }\n    }\n  };\n  const enterFullscreen = () => {\n    const el = getTargetElement(target);\n    if (!el) {\n      return;\n    }\n    if (screenfull.isEnabled) {\n      try {\n        screenfull.request(el);\n        screenfull.on('change', onChange);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  const exitFullscreen = () => {\n    const el = getTargetElement(target);\n    if (screenfull.isEnabled && screenfull.element === el) {\n      screenfull.exit();\n    }\n  };\n  const toggleFullscreen = () => {\n    if (state) {\n      exitFullscreen();\n    } else {\n      enterFullscreen();\n    }\n  };\n  useUnmount(() => {\n    if (screenfull.isEnabled) {\n      screenfull.off('change', onChange);\n    }\n  });\n  return [state, {\n    enterFullscreen: useMemoizedFn(enterFullscreen),\n    exitFullscreen: useMemoizedFn(exitFullscreen),\n    toggleFullscreen: useMemoizedFn(toggleFullscreen),\n    isEnabled: screenfull.isEnabled\n  }];\n};\nexport default useFullscreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}