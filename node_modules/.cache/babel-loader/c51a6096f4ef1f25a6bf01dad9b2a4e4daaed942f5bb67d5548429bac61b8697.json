{"ast":null,"code":"import _defineProperty from \"/Users/liusu/Desktop/h5_free/game/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"/Users/liusu/Desktop/h5_free/game/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/liusu/Desktop/h5_free/game/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport classNames from 'classnames';\nimport React, { useEffect, useMemo } from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport { getTreeDeep } from '../../utils/tree';\nimport { mergeProps } from '../../utils/with-default-props';\nimport Checkbox from '../checkbox';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { devWarning } from '../../utils/dev-log';\nvar classPrefix = \"adm-tree-select-multiple\";\nexport var Multiple = function Multiple(p) {\n  var props = mergeProps({\n    options: [],\n    fieldNames: {},\n    allSelectText: [],\n    defaultExpandKeys: [],\n    defaultValue: []\n  }, p);\n  useEffect(function () {\n    devWarning('TreeSelect', 'TreeSelect.Multiple has been deprecated.');\n  }, []);\n  var labelName = props.fieldNames.label || 'label';\n  var valueName = props.fieldNames.value || 'value';\n  var childrenName = props.fieldNames.children || 'children';\n  // 打开的 keys\n  var _usePropsValue = usePropsValue({\n      value: props.expandKeys,\n      defaultValue: props.defaultExpandKeys\n    }),\n    _usePropsValue2 = _slicedToArray(_usePropsValue, 2),\n    expandKeys = _usePropsValue2[0],\n    setExpandKeys = _usePropsValue2[1];\n  // 选中的 value（聚合后）\n  var _usePropsValue3 = usePropsValue({\n      value: props.value,\n      defaultValue: props.defaultValue\n    }),\n    _usePropsValue4 = _slicedToArray(_usePropsValue3, 2),\n    value = _usePropsValue4[0],\n    setValue = _usePropsValue4[1];\n  // 获取目标所有叶子节点 key 集合\n  var getLeafKeys = function getLeafKeys(option) {\n    var keys = [];\n    var walker = function walker(op) {\n      var _a;\n      if (!op) {\n        return;\n      }\n      if ((_a = op[childrenName]) === null || _a === void 0 ? void 0 : _a.length) {\n        op[childrenName].forEach(function (i) {\n          return walker(i);\n        });\n      } else {\n        keys.push(op[valueName]);\n      }\n    };\n    walker(option);\n    return keys;\n  };\n  var _useMemo = useMemo(function () {\n      var deep = getTreeDeep(props.options, childrenName);\n      var optionsMap = new Map();\n      var optionsParentMap = new Map();\n      function traverse(current, children) {\n        children.forEach(function (item) {\n          optionsParentMap.set(item[valueName], current);\n          optionsMap.set(item[valueName], item);\n          if (item[childrenName]) {\n            traverse(item, item[childrenName]);\n          }\n        });\n      }\n      traverse(undefined, props.options);\n      return [deep, optionsMap, optionsParentMap];\n    }, [props.options]),\n    _useMemo2 = _slicedToArray(_useMemo, 3),\n    deep = _useMemo2[0],\n    optionsMap = _useMemo2[1],\n    optionsParentMap = _useMemo2[2];\n  // 将聚合的 value 拆分开，获得叶子节点的 value 集合\n  var allSelectedLeafKeys = useMemo(function () {\n    var leafKeys = [];\n    value.forEach(function (v) {\n      var option = optionsMap.get(v);\n      leafKeys = leafKeys.concat(getLeafKeys(option));\n    });\n    return leafKeys;\n  }, [value, optionsMap]);\n  // 子级有被选中的节点集合\n  var dotMap = useMemo(function () {\n    var map = new Map();\n    // 遍历 allChildrenValues, 向上递归\n    var walker = function walker(key) {\n      var parentOption = optionsParentMap.get(key);\n      if (!parentOption) {\n        return;\n      }\n      map.set(parentOption[valueName], true);\n      walker(parentOption[valueName]);\n    };\n    allSelectedLeafKeys.forEach(function (key) {\n      map.set(key, true);\n      walker(key);\n    });\n    return map;\n  }, [optionsParentMap, value]);\n  var onChange = function onChange(targetKeys) {\n    var _a;\n    var groupKeys = _toConsumableArray(targetKeys);\n    var unusedKeys = [];\n    var walker = function walker(keys) {\n      keys.forEach(function (key) {\n        var _a;\n        if (unusedKeys.includes(key)) {\n          return;\n        }\n        var parent = optionsParentMap.get(key);\n        if (!parent) {\n          return;\n        }\n        var childrenKeys = ((_a = parent[childrenName]) === null || _a === void 0 ? void 0 : _a.map(function (i) {\n          return i[valueName];\n        })) || [];\n        if (childrenKeys.every(function (i) {\n          return groupKeys.includes(i);\n        })) {\n          groupKeys.push(parent[valueName]);\n          unusedKeys = unusedKeys.concat(childrenKeys);\n        }\n      });\n    };\n    // 遍历 deep 次 groupKeys，每次往上聚合一层\n    for (var i = 0; i < deep; i++) {\n      walker(groupKeys);\n    }\n    groupKeys = groupKeys.filter(function (i) {\n      return !unusedKeys.includes(i);\n    });\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    var groupOptions = groupKeys.map(function (i) {\n      return optionsMap.get(i);\n    });\n    setValue(groupKeys);\n    (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, groupKeys, groupOptions);\n  };\n  var onItemSelect = function onItemSelect(option) {\n    var _a;\n    var parentNodes = [];\n    var current = option;\n    while (current) {\n      parentNodes.unshift(current);\n      var next = optionsParentMap.get(current[valueName]);\n      current = next;\n    }\n    var keys = parentNodes.map(function (i) {\n      return i[valueName];\n    });\n    setExpandKeys(keys);\n    (_a = props.onExpand) === null || _a === void 0 ? void 0 : _a.call(props, keys, parentNodes);\n  };\n  // 渲染全选节点\n  var renderSelectAllItem = function renderSelectAllItem(columnOptions, index) {\n    var _a;\n    var text = (_a = props.selectAllText) === null || _a === void 0 ? void 0 : _a[index];\n    if (!text) {\n      return;\n    }\n    var currentLeafKeys = [];\n    columnOptions.forEach(function (option) {\n      currentLeafKeys = currentLeafKeys.concat(getLeafKeys(option));\n    });\n    var allSelected = currentLeafKeys.every(function (i) {\n      return allSelectedLeafKeys.includes(i);\n    });\n    return React.createElement(\"div\", {\n      onClick: function onClick() {\n        if (allSelected) {\n          onChange(allSelectedLeafKeys.filter(function (i) {\n            return !currentLeafKeys.includes(i);\n          }));\n        } else {\n          onChange(allSelectedLeafKeys.concat(currentLeafKeys));\n        }\n      },\n      className: \"\".concat(classPrefix, \"-item\")\n    }, text);\n  };\n  // 渲染\n  var renderSelectAllLeafItem = function renderSelectAllLeafItem(columnOptions, index) {\n    var _a;\n    var text = (_a = props.selectAllText) === null || _a === void 0 ? void 0 : _a[index];\n    if (!text) {\n      return;\n    }\n    var currentLeafKeys = columnOptions.map(function (i) {\n      return i[valueName];\n    });\n    var allSelected = currentLeafKeys.every(function (i) {\n      return allSelectedLeafKeys.includes(i);\n    });\n    var halfSelected = allSelected ? false : currentLeafKeys.some(function (i) {\n      return allSelectedLeafKeys.includes(i);\n    });\n    return React.createElement(\"div\", {\n      onClick: function onClick() {\n        if (allSelected) {\n          onChange(allSelectedLeafKeys.filter(function (i) {\n            return !currentLeafKeys.includes(i);\n          }));\n        } else {\n          onChange(allSelectedLeafKeys.concat(currentLeafKeys));\n        }\n      },\n      className: classNames(\"\".concat(classPrefix, \"-item\"), \"\".concat(classPrefix, \"-item-leaf\"))\n    }, React.createElement(Checkbox, {\n      className: \"\".concat(classPrefix, \"-item-checkbox\"),\n      checked: allSelected,\n      indeterminate: halfSelected\n    }), text);\n  };\n  // 渲染节点\n  var renderItem = function renderItem(option) {\n    var isExpand = expandKeys.includes(option[valueName]);\n    return React.createElement(\"div\", {\n      key: option[valueName],\n      onClick: function onClick() {\n        if (!isExpand) {\n          onItemSelect(option);\n        }\n      },\n      className: classNames(\"\".concat(classPrefix, \"-item\"), _defineProperty({}, \"\".concat(classPrefix, \"-item-expand\"), isExpand))\n    }, option[labelName], !!dotMap.get(option[valueName]) && React.createElement(\"div\", {\n      className: \"\".concat(classPrefix, \"-dot\")\n    }));\n  };\n  // 渲染叶子节点\n  var renderLeafItem = function renderLeafItem(option) {\n    var isSelected = allSelectedLeafKeys.includes(option[valueName]);\n    return React.createElement(\"div\", {\n      key: option[valueName],\n      onClick: function onClick() {\n        if (isSelected) {\n          onChange(allSelectedLeafKeys.filter(function (val) {\n            return val !== option[valueName];\n          }));\n        } else {\n          onChange([].concat(_toConsumableArray(allSelectedLeafKeys), [option[valueName]]));\n        }\n      },\n      className: classNames(\"\".concat(classPrefix, \"-item\"), \"\".concat(classPrefix, \"-item-leaf\"))\n    }, React.createElement(Checkbox, {\n      className: \"\".concat(classPrefix, \"-item-checkbox\"),\n      checked: isSelected\n    }), option[labelName]);\n  };\n  var renderItems = function renderItems() {\n    var columnOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var index = arguments.length > 1 ? arguments[1] : undefined;\n    if (columnOptions.length === 0) {\n      return;\n    }\n    var isLeaf = deep === index + 1;\n    if (isLeaf) {\n      return React.createElement(React.Fragment, null, renderSelectAllLeafItem(columnOptions, index), columnOptions.map(function (option) {\n        return renderLeafItem(option);\n      }));\n    }\n    return React.createElement(React.Fragment, null, renderSelectAllItem(columnOptions, index), columnOptions.map(function (option) {\n      return renderItem(option);\n    }));\n  };\n  var renderColumns = function renderColumns() {\n    var _a;\n    var columns = [];\n    for (var i = 0; i < deep; i++) {\n      var width = \"\".concat(100 / deep, \"%\");\n      // 两列的第一列宽度为 33.33，两列的第二列为 66.67%\n      if (deep === 2 && i === 0) {\n        width = \"33.33%\";\n      }\n      if (deep === 2 && i === 1) {\n        width = \"66.67%\";\n      }\n      var column = React.createElement(\"div\", {\n        key: i,\n        className: classNames(\"\".concat(classPrefix, \"-column\")),\n        style: {\n          width: width\n        }\n      }, renderItems(i === 0 ? props.options : (_a = optionsMap.get(expandKeys[i - 1])) === null || _a === void 0 ? void 0 : _a[childrenName], i));\n      columns.push(column);\n    }\n    return columns;\n  };\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classPrefix\n  }, renderColumns()));\n};","map":{"version":3,"names":["classNames","React","useEffect","useMemo","withNativeProps","getTreeDeep","mergeProps","Checkbox","usePropsValue","devWarning","classPrefix","Multiple","p","props","options","fieldNames","allSelectText","defaultExpandKeys","defaultValue","labelName","label","valueName","value","childrenName","children","_usePropsValue","expandKeys","_usePropsValue2","_slicedToArray","setExpandKeys","_usePropsValue3","_usePropsValue4","setValue","getLeafKeys","option","keys","walker","op","_a","length","forEach","i","push","_useMemo","deep","optionsMap","Map","optionsParentMap","traverse","current","item","set","undefined","_useMemo2","allSelectedLeafKeys","leafKeys","v","get","concat","dotMap","map","key","parentOption","onChange","targetKeys","groupKeys","_toConsumableArray","unusedKeys","includes","parent","childrenKeys","every","filter","groupOptions","call","onItemSelect","parentNodes","unshift","next","onExpand","renderSelectAllItem","columnOptions","index","text","selectAllText","currentLeafKeys","allSelected","createElement","onClick","className","renderSelectAllLeafItem","halfSelected","some","checked","indeterminate","renderItem","isExpand","_defineProperty","renderLeafItem","isSelected","val","renderItems","arguments","isLeaf","Fragment","renderColumns","columns","width","column","style"],"sources":["/Users/liusu/Desktop/h5_free/game/node_modules/antd-mobile/es/components/tree-select/multiple.js"],"sourcesContent":["import classNames from 'classnames';\nimport React, { useEffect, useMemo } from 'react';\nimport { withNativeProps } from '../../utils/native-props';\nimport { getTreeDeep } from '../../utils/tree';\nimport { mergeProps } from '../../utils/with-default-props';\nimport Checkbox from '../checkbox';\nimport { usePropsValue } from '../../utils/use-props-value';\nimport { devWarning } from '../../utils/dev-log';\nconst classPrefix = `adm-tree-select-multiple`;\nexport const Multiple = p => {\n  const props = mergeProps({\n    options: [],\n    fieldNames: {},\n    allSelectText: [],\n    defaultExpandKeys: [],\n    defaultValue: []\n  }, p);\n  useEffect(() => {\n    devWarning('TreeSelect', 'TreeSelect.Multiple has been deprecated.');\n  }, []);\n  const labelName = props.fieldNames.label || 'label';\n  const valueName = props.fieldNames.value || 'value';\n  const childrenName = props.fieldNames.children || 'children';\n  // 打开的 keys\n  const [expandKeys, setExpandKeys] = usePropsValue({\n    value: props.expandKeys,\n    defaultValue: props.defaultExpandKeys\n  });\n  // 选中的 value（聚合后）\n  const [value, setValue] = usePropsValue({\n    value: props.value,\n    defaultValue: props.defaultValue\n  });\n  // 获取目标所有叶子节点 key 集合\n  const getLeafKeys = option => {\n    const keys = [];\n    const walker = op => {\n      var _a;\n      if (!op) {\n        return;\n      }\n      if ((_a = op[childrenName]) === null || _a === void 0 ? void 0 : _a.length) {\n        op[childrenName].forEach(i => walker(i));\n      } else {\n        keys.push(op[valueName]);\n      }\n    };\n    walker(option);\n    return keys;\n  };\n  const [deep, optionsMap, optionsParentMap] = useMemo(() => {\n    const deep = getTreeDeep(props.options, childrenName);\n    const optionsMap = new Map();\n    const optionsParentMap = new Map();\n    function traverse(current, children) {\n      children.forEach(item => {\n        optionsParentMap.set(item[valueName], current);\n        optionsMap.set(item[valueName], item);\n        if (item[childrenName]) {\n          traverse(item, item[childrenName]);\n        }\n      });\n    }\n    traverse(undefined, props.options);\n    return [deep, optionsMap, optionsParentMap];\n  }, [props.options]);\n  // 将聚合的 value 拆分开，获得叶子节点的 value 集合\n  const allSelectedLeafKeys = useMemo(() => {\n    let leafKeys = [];\n    value.forEach(v => {\n      const option = optionsMap.get(v);\n      leafKeys = leafKeys.concat(getLeafKeys(option));\n    });\n    return leafKeys;\n  }, [value, optionsMap]);\n  // 子级有被选中的节点集合\n  const dotMap = useMemo(() => {\n    const map = new Map();\n    // 遍历 allChildrenValues, 向上递归\n    const walker = key => {\n      const parentOption = optionsParentMap.get(key);\n      if (!parentOption) {\n        return;\n      }\n      map.set(parentOption[valueName], true);\n      walker(parentOption[valueName]);\n    };\n    allSelectedLeafKeys.forEach(key => {\n      map.set(key, true);\n      walker(key);\n    });\n    return map;\n  }, [optionsParentMap, value]);\n  const onChange = targetKeys => {\n    var _a;\n    let groupKeys = [...targetKeys];\n    let unusedKeys = [];\n    const walker = keys => {\n      keys.forEach(key => {\n        var _a;\n        if (unusedKeys.includes(key)) {\n          return;\n        }\n        const parent = optionsParentMap.get(key);\n        if (!parent) {\n          return;\n        }\n        const childrenKeys = ((_a = parent[childrenName]) === null || _a === void 0 ? void 0 : _a.map(i => i[valueName])) || [];\n        if (childrenKeys.every(i => groupKeys.includes(i))) {\n          groupKeys.push(parent[valueName]);\n          unusedKeys = unusedKeys.concat(childrenKeys);\n        }\n      });\n    };\n    // 遍历 deep 次 groupKeys，每次往上聚合一层\n    for (let i = 0; i < deep; i++) {\n      walker(groupKeys);\n    }\n    groupKeys = groupKeys.filter(i => !unusedKeys.includes(i));\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const groupOptions = groupKeys.map(i => optionsMap.get(i));\n    setValue(groupKeys);\n    (_a = props.onChange) === null || _a === void 0 ? void 0 : _a.call(props, groupKeys, groupOptions);\n  };\n  const onItemSelect = option => {\n    var _a;\n    const parentNodes = [];\n    let current = option;\n    while (current) {\n      parentNodes.unshift(current);\n      const next = optionsParentMap.get(current[valueName]);\n      current = next;\n    }\n    const keys = parentNodes.map(i => i[valueName]);\n    setExpandKeys(keys);\n    (_a = props.onExpand) === null || _a === void 0 ? void 0 : _a.call(props, keys, parentNodes);\n  };\n  // 渲染全选节点\n  const renderSelectAllItem = (columnOptions, index) => {\n    var _a;\n    const text = (_a = props.selectAllText) === null || _a === void 0 ? void 0 : _a[index];\n    if (!text) {\n      return;\n    }\n    let currentLeafKeys = [];\n    columnOptions.forEach(option => {\n      currentLeafKeys = currentLeafKeys.concat(getLeafKeys(option));\n    });\n    const allSelected = currentLeafKeys.every(i => allSelectedLeafKeys.includes(i));\n    return React.createElement(\"div\", {\n      onClick: () => {\n        if (allSelected) {\n          onChange(allSelectedLeafKeys.filter(i => !currentLeafKeys.includes(i)));\n        } else {\n          onChange(allSelectedLeafKeys.concat(currentLeafKeys));\n        }\n      },\n      className: `${classPrefix}-item`\n    }, text);\n  };\n  // 渲染\n  const renderSelectAllLeafItem = (columnOptions, index) => {\n    var _a;\n    const text = (_a = props.selectAllText) === null || _a === void 0 ? void 0 : _a[index];\n    if (!text) {\n      return;\n    }\n    const currentLeafKeys = columnOptions.map(i => i[valueName]);\n    const allSelected = currentLeafKeys.every(i => allSelectedLeafKeys.includes(i));\n    const halfSelected = allSelected ? false : currentLeafKeys.some(i => allSelectedLeafKeys.includes(i));\n    return React.createElement(\"div\", {\n      onClick: () => {\n        if (allSelected) {\n          onChange(allSelectedLeafKeys.filter(i => !currentLeafKeys.includes(i)));\n        } else {\n          onChange(allSelectedLeafKeys.concat(currentLeafKeys));\n        }\n      },\n      className: classNames(`${classPrefix}-item`, `${classPrefix}-item-leaf`)\n    }, React.createElement(Checkbox, {\n      className: `${classPrefix}-item-checkbox`,\n      checked: allSelected,\n      indeterminate: halfSelected\n    }), text);\n  };\n  // 渲染节点\n  const renderItem = option => {\n    const isExpand = expandKeys.includes(option[valueName]);\n    return React.createElement(\"div\", {\n      key: option[valueName],\n      onClick: () => {\n        if (!isExpand) {\n          onItemSelect(option);\n        }\n      },\n      className: classNames(`${classPrefix}-item`, {\n        [`${classPrefix}-item-expand`]: isExpand\n      })\n    }, option[labelName], !!dotMap.get(option[valueName]) && React.createElement(\"div\", {\n      className: `${classPrefix}-dot`\n    }));\n  };\n  // 渲染叶子节点\n  const renderLeafItem = option => {\n    const isSelected = allSelectedLeafKeys.includes(option[valueName]);\n    return React.createElement(\"div\", {\n      key: option[valueName],\n      onClick: () => {\n        if (isSelected) {\n          onChange(allSelectedLeafKeys.filter(val => val !== option[valueName]));\n        } else {\n          onChange([...allSelectedLeafKeys, option[valueName]]);\n        }\n      },\n      className: classNames(`${classPrefix}-item`, `${classPrefix}-item-leaf`)\n    }, React.createElement(Checkbox, {\n      className: `${classPrefix}-item-checkbox`,\n      checked: isSelected\n    }), option[labelName]);\n  };\n  const renderItems = (columnOptions = [], index) => {\n    if (columnOptions.length === 0) {\n      return;\n    }\n    const isLeaf = deep === index + 1;\n    if (isLeaf) {\n      return React.createElement(React.Fragment, null, renderSelectAllLeafItem(columnOptions, index), columnOptions.map(option => {\n        return renderLeafItem(option);\n      }));\n    }\n    return React.createElement(React.Fragment, null, renderSelectAllItem(columnOptions, index), columnOptions.map(option => {\n      return renderItem(option);\n    }));\n  };\n  const renderColumns = () => {\n    var _a;\n    const columns = [];\n    for (let i = 0; i < deep; i++) {\n      let width = `${100 / deep}%`;\n      // 两列的第一列宽度为 33.33，两列的第二列为 66.67%\n      if (deep === 2 && i === 0) {\n        width = `33.33%`;\n      }\n      if (deep === 2 && i === 1) {\n        width = `66.67%`;\n      }\n      const column = React.createElement(\"div\", {\n        key: i,\n        className: classNames(`${classPrefix}-column`),\n        style: {\n          width\n        }\n      }, renderItems(i === 0 ? props.options : (_a = optionsMap.get(expandKeys[i - 1])) === null || _a === void 0 ? void 0 : _a[childrenName], i));\n      columns.push(column);\n    }\n    return columns;\n  };\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classPrefix\n  }, renderColumns()));\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}