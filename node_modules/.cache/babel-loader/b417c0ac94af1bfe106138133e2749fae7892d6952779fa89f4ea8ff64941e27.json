{"ast":null,"code":"import _slicedToArray from \"/Users/liusu/Desktop/h5_free/game/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport useRafState from '../useRafState';\nimport useEventListener from '../useEventListener';\nimport { getTargetElement } from '../utils/domTarget';\nvar initState = {\n  screenX: NaN,\n  screenY: NaN,\n  clientX: NaN,\n  clientY: NaN,\n  pageX: NaN,\n  pageY: NaN,\n  elementX: NaN,\n  elementY: NaN,\n  elementH: NaN,\n  elementW: NaN,\n  elementPosX: NaN,\n  elementPosY: NaN\n};\nexport default (function (target) {\n  var _useRafState = useRafState(initState),\n    _useRafState2 = _slicedToArray(_useRafState, 2),\n    state = _useRafState2[0],\n    setState = _useRafState2[1];\n  useEventListener('mousemove', function (event) {\n    var screenX = event.screenX,\n      screenY = event.screenY,\n      clientX = event.clientX,\n      clientY = event.clientY,\n      pageX = event.pageX,\n      pageY = event.pageY;\n    var newState = {\n      screenX: screenX,\n      screenY: screenY,\n      clientX: clientX,\n      clientY: clientY,\n      pageX: pageX,\n      pageY: pageY,\n      elementX: NaN,\n      elementY: NaN,\n      elementH: NaN,\n      elementW: NaN,\n      elementPosX: NaN,\n      elementPosY: NaN\n    };\n    var targetElement = getTargetElement(target);\n    if (targetElement) {\n      var _targetElement$getBou = targetElement.getBoundingClientRect(),\n        left = _targetElement$getBou.left,\n        top = _targetElement$getBou.top,\n        width = _targetElement$getBou.width,\n        height = _targetElement$getBou.height;\n      newState.elementPosX = left + window.pageXOffset;\n      newState.elementPosY = top + window.pageYOffset;\n      newState.elementX = pageX - newState.elementPosX;\n      newState.elementY = pageY - newState.elementPosY;\n      newState.elementW = width;\n      newState.elementH = height;\n    }\n    setState(newState);\n  }, {\n    target: function target() {\n      return document;\n    }\n  });\n  return state;\n});","map":{"version":3,"names":["useRafState","useEventListener","getTargetElement","initState","screenX","NaN","screenY","clientX","clientY","pageX","pageY","elementX","elementY","elementH","elementW","elementPosX","elementPosY","target","_useRafState","_useRafState2","_slicedToArray","state","setState","event","newState","targetElement","_targetElement$getBou","getBoundingClientRect","left","top","width","height","window","pageXOffset","pageYOffset","document"],"sources":["/Users/liusu/Desktop/h5_free/game/node_modules/ahooks/es/useMouse/index.js"],"sourcesContent":["import useRafState from '../useRafState';\nimport useEventListener from '../useEventListener';\nimport { getTargetElement } from '../utils/domTarget';\nconst initState = {\n  screenX: NaN,\n  screenY: NaN,\n  clientX: NaN,\n  clientY: NaN,\n  pageX: NaN,\n  pageY: NaN,\n  elementX: NaN,\n  elementY: NaN,\n  elementH: NaN,\n  elementW: NaN,\n  elementPosX: NaN,\n  elementPosY: NaN\n};\nexport default (target => {\n  const [state, setState] = useRafState(initState);\n  useEventListener('mousemove', event => {\n    const {\n      screenX,\n      screenY,\n      clientX,\n      clientY,\n      pageX,\n      pageY\n    } = event;\n    const newState = {\n      screenX,\n      screenY,\n      clientX,\n      clientY,\n      pageX,\n      pageY,\n      elementX: NaN,\n      elementY: NaN,\n      elementH: NaN,\n      elementW: NaN,\n      elementPosX: NaN,\n      elementPosY: NaN\n    };\n    const targetElement = getTargetElement(target);\n    if (targetElement) {\n      const {\n        left,\n        top,\n        width,\n        height\n      } = targetElement.getBoundingClientRect();\n      newState.elementPosX = left + window.pageXOffset;\n      newState.elementPosY = top + window.pageYOffset;\n      newState.elementX = pageX - newState.elementPosX;\n      newState.elementY = pageY - newState.elementPosY;\n      newState.elementW = width;\n      newState.elementH = height;\n    }\n    setState(newState);\n  }, {\n    target: () => document\n  });\n  return state;\n});"],"mappings":";AAAA,OAAOA,WAAW,MAAM,gBAAgB;AACxC,OAAOC,gBAAgB,MAAM,qBAAqB;AAClD,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,IAAMC,SAAS,GAAG;EAChBC,OAAO,EAAEC,GAAG;EACZC,OAAO,EAAED,GAAG;EACZE,OAAO,EAAEF,GAAG;EACZG,OAAO,EAAEH,GAAG;EACZI,KAAK,EAAEJ,GAAG;EACVK,KAAK,EAAEL,GAAG;EACVM,QAAQ,EAAEN,GAAG;EACbO,QAAQ,EAAEP,GAAG;EACbQ,QAAQ,EAAER,GAAG;EACbS,QAAQ,EAAET,GAAG;EACbU,WAAW,EAAEV,GAAG;EAChBW,WAAW,EAAEX;AACf,CAAC;AACD,gBAAgB,UAAAY,MAAM,EAAI;EACxB,IAAAC,YAAA,GAA0BlB,WAAW,CAACG,SAAS,CAAC;IAAAgB,aAAA,GAAAC,cAAA,CAAAF,YAAA;IAAzCG,KAAK,GAAAF,aAAA;IAAEG,QAAQ,GAAAH,aAAA;EACtBlB,gBAAgB,CAAC,WAAW,EAAE,UAAAsB,KAAK,EAAI;IACrC,IACEnB,OAAO,GAMLmB,KAAK,CANPnB,OAAO;MACPE,OAAO,GAKLiB,KAAK,CALPjB,OAAO;MACPC,OAAO,GAILgB,KAAK,CAJPhB,OAAO;MACPC,OAAO,GAGLe,KAAK,CAHPf,OAAO;MACPC,KAAK,GAEHc,KAAK,CAFPd,KAAK;MACLC,KAAK,GACHa,KAAK,CADPb,KAAK;IAEP,IAAMc,QAAQ,GAAG;MACfpB,OAAO,EAAPA,OAAO;MACPE,OAAO,EAAPA,OAAO;MACPC,OAAO,EAAPA,OAAO;MACPC,OAAO,EAAPA,OAAO;MACPC,KAAK,EAALA,KAAK;MACLC,KAAK,EAALA,KAAK;MACLC,QAAQ,EAAEN,GAAG;MACbO,QAAQ,EAAEP,GAAG;MACbQ,QAAQ,EAAER,GAAG;MACbS,QAAQ,EAAET,GAAG;MACbU,WAAW,EAAEV,GAAG;MAChBW,WAAW,EAAEX;IACf,CAAC;IACD,IAAMoB,aAAa,GAAGvB,gBAAgB,CAACe,MAAM,CAAC;IAC9C,IAAIQ,aAAa,EAAE;MACjB,IAAAC,qBAAA,GAKID,aAAa,CAACE,qBAAqB,EAAE;QAJvCC,IAAI,GAAAF,qBAAA,CAAJE,IAAI;QACJC,GAAG,GAAAH,qBAAA,CAAHG,GAAG;QACHC,KAAK,GAAAJ,qBAAA,CAALI,KAAK;QACLC,MAAM,GAAAL,qBAAA,CAANK,MAAM;MAERP,QAAQ,CAACT,WAAW,GAAGa,IAAI,GAAGI,MAAM,CAACC,WAAW;MAChDT,QAAQ,CAACR,WAAW,GAAGa,GAAG,GAAGG,MAAM,CAACE,WAAW;MAC/CV,QAAQ,CAACb,QAAQ,GAAGF,KAAK,GAAGe,QAAQ,CAACT,WAAW;MAChDS,QAAQ,CAACZ,QAAQ,GAAGF,KAAK,GAAGc,QAAQ,CAACR,WAAW;MAChDQ,QAAQ,CAACV,QAAQ,GAAGgB,KAAK;MACzBN,QAAQ,CAACX,QAAQ,GAAGkB,MAAM;IAC5B;IACAT,QAAQ,CAACE,QAAQ,CAAC;EACpB,CAAC,EAAE;IACDP,MAAM,EAAE,SAAAA,OAAA;MAAA,OAAMkB,QAAQ;IAAA;EACxB,CAAC,CAAC;EACF,OAAOd,KAAK;AACd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}